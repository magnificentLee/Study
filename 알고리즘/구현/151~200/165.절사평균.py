# 절사평균 (7, 2) = 전체 길이 7에서 좌우 양쪽끝 2개를 제거한 가운데 3개의 평균
# 보정평균 (7, 2) = 전체 길이 7에서 좌우 양쪽끝 2개를 남은 점수 중 가장 가까운 것으로 교체하여 구한 평균
# 예를 들어 5.0, 9.1, 9.3, 9.3, 9.5, 9.6, 9.8 에서 보정평균은 9.3 9.3 /9.3 9.3 9.5/ 9.5 9.5 의 평균 = 9.39
# 절사평균(N, K)와 보정평균(N, K)를 계산하는 프로그램을 작성하시오
# 소수점이하 셋째 자리에서 반올림하여 둘째 자리까지 출력 9.667인 경우 9.67로 5인 경우 5.00으로, 5.5인 경우에는 5.50으로 출력
# 파이썬에서 좌우를 빼는 것은 쉬움 pop(0), pop(-1)을 해주면 됨
# 그리고 더해주는 것은 앞의 경우 insert, 뒤는 append를 해주면 될 듯?
# 아래는 보정 평균을 구하는 과정중 일부, 절사는 마지막 반복문을 지워주면 됨
# 다만 해당 방법이 통하지는 모르겠음, 입력값의 범위가 워낙 넓다보니 시간초과가 발생할 것 같음 => 당연히 시간초과됨
# => pop, append 방식은 아닌것 같음
# 또 float 을 이용하기 때문에 부동소수점 에러가 발생하지 않을까 걱정임 => 시간초과 이후 오답이 출력된건 이것 때문인 것 같음
# 실제 값이 10.105여야 하는데 10.1049999999999로 저장되었을 때 문제가 된다는 것
# 파이썬엔 double 형태가 없기 때문에 float의 오차를 조정해줘야 되는데 어떻게 해야 될까? => 수동 보정(결과에 1e-8을 더해줌)
# 4024ms가 걸림 => 일반적인 방법으로는 절대 못 풀음
n, k = map(int, input().split())
array = sorted([float(input()) for _ in range(n)])
res1 = sum(array[k:n - k]) / (n - 2 * k)
res2 = (sum(array[k: n - k]) + k * (array[k] + array[n - k - 1])) / n
print("%.2f" % (res1 + 1e-8))
print("%.2f" % (res2 + 1e-8))