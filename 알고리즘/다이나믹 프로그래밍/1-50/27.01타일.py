# 00(0의 쌍 형태), 1 로 구성
# n = 1   2    3    4     5
#     1  00  001 0000 00111 00100
#        11  100 0011 10011 00001
#            111 1100 11001 11111
#                1001 11100
#                1111 10000
#     1   2    3    5      8... 즉, 피보나치 수열
# n의 범위가 1백만까지임, 테스트 결과 10만까지는 바로 나오지만 100만은 오래걸림 => 문제에 주어진 15746의 나머지를 이용하면
# 결과가 바로 나오기는 함
# 정답1, 468ms
"""
import sys

n = int(sys.stdin.readline())
dp = [1, 2]
for i in range(2, n + 1):
    tmp = (dp[i - 2] + dp[i - 1]) % 15746
    dp.append(tmp)
print(dp[n - 1])
"""
# 빠른 입력이 없으면 436ms 가 걸림
# tmp 식을 append에 바로 넣으니  408ms까지 줄어들었음
n = int(input())
dp = [1, 2]
for i in range(2, n + 1):
    dp.append((dp[i - 2] + dp[i - 1]) % 15746)
print(dp[n - 1])