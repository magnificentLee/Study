# sorted, sort : 기본 정렬 라이브러리(병합정렬방식)
# 퀵정렬보다는 느리지만 최악의 경우에도 O(NlogN) 의 시간 복잡도를 보장
array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]
result = sorted(array)
print(result)

array2 = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]
array2.sort()
print(array2)

array3 = [("바나나", 2), ("사과", 5), ("당근", 3)]

def setting(data):
    return data[1] # 딕셔너리의 정수값(2, 5, 3), data[0] = 한글:바나나,사과..

result2 = sorted(array3, key=setting)
print(result2)

# 일반적인 경우 직접 구현하는 것 보다 라이브러리를 이용하는게 효과적
# 정렬 알고리즘이 사용되는 문제 유형 3가지
# 1. 정렬 라이브러리로 풀 수 있는 문제:
# 단순히 정렬 기법을 알고 있는지 물어보는 문제
# 2. 정렬 알고리즘 원리에 대해서 물어보는 문제:
# 선택, 삽입, 퀵 정렬 등의 원리를 알고 있어야 함
# 3. 더 빠른 정렬이 필요한 문제:
# 퀵 정렬 기반의 정렬 기법으로는 풀 수 없으며 계수 정렬 등의 다른 정렬 알고리즘
# 혹은 기존 알고리즘의 구조적 개선이 동반되야 풀 수 있음