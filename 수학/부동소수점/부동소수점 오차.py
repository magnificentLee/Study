"""
파이썬에서 0.1 + 0.2는 0.3이 아닌 0.30000000000000004 가 나온다
파이썬에선 실수를 부동소수점 방식으로 표현하는데 부동소수점은 실수를 정확히 표현할 수 없는 문제가 있음
그래서 0.3이 아닌 0.30000000000000004가 나오게 되는 것
이렇게 실수를 근삿값으로 표현하면서 발생하는 문제를 부동소수점 반올림 오차라고 한다
단순히 == 를 이용해 비교하려고 하면 오답이 발생한다
"""
print(0.1 + 0.2 == 0.3)  # False가 나옴
# 머신 엡실론을 이용해 판별 가능함
import math
print(math.isclose(0.1 + 0.2, 0.3))  # 파이썬 3.5 이상부터는 math.isclose 함수를 사용하면 됨
# 그외에 Decimal, Fraction, 수동 보정 등이 있음

# Decimal : 반올림 오착 ㅏ없는 고정소수점을 사용, 숫자를 10진수로 처리하여 정확한 소수점 자릿수를 표현함
from decimal import Decimal
print(Decimal("0.1") + Decimal("0.2"))  # 0.3이 나옴

# Fraction : 순환소수 같이 고정소수점으로 정확히 표현할 수 없는 경우 사용
from fractions import Fraction
print(Fraction(10, 3))  # 순환소수 3.33333이 아닌 분수로 3분의 10이라고 정확히 표현

# 수동 보정
# 결과값에 1e-n 값을 더하여 보정해주는 방법
print(0.043 - 0.001)  # 반올림 오차 때문에 0.041999999999999996 이 나옴
print(0.043 - 0.001 + 1e-17)  # 0.00000000000000001을 더하는것과 같음 0.042가 나옴
res = 0
# 0.1을 10번 더 했을 때 파이썬에선 1.0으로 인식하지 않는다. 정확히는 0.9999999999999999 라고 인식한다
for _ in range(10):
    res += 0.1
print("res의 값은 {}".format(res))
res += 1e-16  # 따라서 이를 보정해주기 위해 1e-16 값을 더해주면 1.0이 나오게 된다
print("res를 보정한 값은 {}".format(res))

check = 10.105
res2 = 10.1049999999999
# 소숫점 3번째 자리에서 반올림 한다고 했을 때도 만약 반올림 오차를 보정하지 않으면 다음과 같이 오답이 나온다는 것
print("check의 값은 %.2f" % check)  # 두 값은 다르다
print("res2의 값은 %.2f" % res2)
res2 += 1e-6  # 따라서 float 값을 보정해주기위해 일반적으로 1e-6값을 더해서 반올림하게 됨
print("res2를 보정한 값은 %.2f" % res2)  # 이제 두 값은 동일하다
