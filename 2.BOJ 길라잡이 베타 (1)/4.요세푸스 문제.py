# 백준 1158 요세푸스 문제
# 원형을 기준으로 시계방향으로 숫자를 두고 진행하면서 k번째마다 빼주는 것
# 뺀다음 앞으로 한 칸 전진하고 계속 같은 과정을 반복함
# 요세푸스 7, 3 = 1 2 3 4 5 6 7
# 매 3번째의 숫자를 빼서 계산
# 1 2 3 4 5 6 7
# 1 2 4 5 6 7 (3을 빼주고 4부터 시작)
# 1 2 4 5 7 (6을 빼주고 7부터 시작)
# 1 4 5 7 (2를 빼주고 4부터 시작)
# 1 4 5 (7을 빼주고 1부터 시작)
# 1 4 (5를 빼주고 1부터 시작)
# 4 (1을 빼주고 4부터 시작)
# 리스트의 길이가 계속 바뀌기 때문에 while문을 사용
# 결과 : <3, 6, 2, 7, 5, 1, 4>
n, k = map(int, input().split())
array = [i + 1 for i in range(n)]
idx = 0
result = []
while array:
    idx = (idx + (k - 1)) % n
    tmp = array.pop(idx)
    result.append(tmp)
    n -= 1
print("<", end="")
print(*result, sep=", ", end=">")